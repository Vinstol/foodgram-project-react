name: foodgram_workflow

on:
  push:
    branches:
      - master
      # - "**"
    # paths-ignore:
    #   - '**/README.md'
    #   - '**/docker-compose.yml'

jobs:
  linter:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt 

    - name: Test with flake8
      run: |
        python -m flake8 
  
  # build_and_push_to_docker_hub:
  #   if: github.ref == 'refs/heads/master'
  #   name: Push Docker image to Docker Hub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v2
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Login to Docker 
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USER }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Push to Docker Hub
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         context: backend/
  #         tags: viktrols/foodgram:latest

  # deploy:
  #   if: github.ref == 'refs/heads/master'
  #   runs-on: ubuntu-latest
  #   needs: build_and_push_to_docker_hub
  #   steps:
  #     - name: executing remote ssh commands to deploy
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USER }}
  #         key: ${{ secrets.SSH_KEY }}
  #         passphrase: ${{ secrets.PASSPHRASE }}
  #         script: |
  #           sudo docker pull viktrols/foodgram:latest
  #           sudo docker-compose stop
  #           sudo docker-compose rm backend
  #           sudo docker-compose -f docker-compose.yml up -d
  
  # send_message:
  #   runs-on: ubuntu-latest
  #   needs: linter  # deploy
  #   steps:
  #     - name: Telegram notification message
  #       uses: appleboy/telegram-action@master
  #       with:
  #         to: ${{ secrets.TELEGRAM_TO }}
  #         token: ${{ secrets.TELEGRAM_TOKEN }}
  #         message: ${{ github.workflow }} успешно выполнен!
